# This workflow will build a test Java + JUnit + Appium + BrowserStack project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Test Run

on:
  workflow_dispatch:
    inputs:
      test_tag:
        description: 'Tags to run'
        required: true
        default: '@example_tag'
      bs_app_link:
        description: 'app_url of uploaded to BS link'
        required: true
        default: 'bs://8f566db51922fcbccc31e4fe980936dab47dd281'
      build_name:
        description: 'build name of given application'
        required: true
        default: 'palace-debug'
      platform_name:
        description: 'Platform name'
        required: true
        default: 'android'
      device_name_and_version:
        description: 'device name and version for autotests'
        required: true
        default: 'SamsungGalaxyS21_11'

jobs:
  first_job:
    name: "${{github.event.inputs.device_name_and_version}} part 1"
    runs-on: ubuntu-latest
    timeout-minutes: 600

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: 11

    - name: Run tests
      run: mvn clean test -Daquality.buildName="${{github.event.inputs.build_name}}" -DdriverSettings.${{github.event.inputs.platform_name}}.deviceKey=${{github.event.inputs.device_name_and_version}} -Daquality.token=${{secrets.TRACKING_API_TOKEN}} -Daquality.suiteName="${{github.event.inputs.platform_name}} - ${{github.event.inputs.test_tag}}" -Daquality.environment="${{github.event.inputs.platform_name}}" -Dcredentials.LYRASISReads."ios".${{secrets.BookCardLyrasis1}}=${{secrets.BookPinLyrasis1}} -Dcredentials.LYRASISReads."ios".${{secrets.BookCardLyrasis2}}=${{secrets.BookPinLyrasis2}} -Dcredentials.LYRASISReads."android".${{secrets.BookCardLyrasis1}}=${{secrets.BookPinLyrasis1}} -Dcredentials.LYRASISReads."android".${{secrets.BookCardLyrasis2}}=${{secrets.BookPinLyrasis2}} -Dcredentials.A1QATestLibrary."ios".${{secrets.BookCardLyrasis1}}=${{secrets.BookPinLyrasis1}} -Dcredentials.A1QATestLibrary."ios".${{secrets.BookCardLyrasis2}}=${{secrets.BookPinLyrasis2}} -Dcredentials.A1QATestLibrary."android".${{secrets.BookCardLyrasis1}}=${{secrets.BookPinLyrasis1}} -Dcredentials.A1QATestLibrary."android".${{secrets.BookCardLyrasis2}}=${{secrets.BookPinLyrasis2}} -DremoteConnectionUrl=${{secrets.remoteConnectionUrl}} -DdriverSettings.${{github.event.inputs.platform_name}}.capabilities."browserstack.user"=${{secrets.BROWSERSTACK_USER}} -DdriverSettings.${{github.event.inputs.platform_name}}.capabilities."browserstack.key"=${{secrets.BROWSERSTACK_KEY}} -DplatformName=${{github.event.inputs.platform_name}} -DdriverSettings.${{github.event.inputs.platform_name}}.capabilities.app=${{github.event.inputs.bs_app_link}} -Dcucumber.options="--tags '(${{github.event.inputs.test_tag}} and not @ignore) and not @exclude_${{github.event.inputs.platform_name}} and not @tier1'"

    - name: Generate Allure Report
      uses: actions/checkout@v2
#      uses: AEkaterina/action-allure-report@v0.1.1
      if: success() || failure()
      with:
        ref: main
        path: main

    - name: Upload report
      uses: simple-elf/allure-report-action@master
#      uses: actions/upload-artifact@v3
#      with:
#        name: allure-report-1
#        path: allure-report/
      if: success() || failure()
      id: allure-report
      with:
        allure_results: target/allure-results
        main: main
        allure_report: allure-report
        allure_history: allure-history

    - name: Deploy report to Github Pages
      if: success() || failure()
      uses: peaceiris/actions-gh-pages@v2
      env:
        PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        PUBLISH_BRANCH: main
        PUBLISH_DIR: allure-history
  
#  second_job:
#    name: "${{github.event.inputs.device_name_and_version}} part 2"
#    runs-on: ubuntu-latest
#    timeout-minutes: 600
#
#    steps:
#    - uses: actions/checkout@v3
#    - name: Set up JDK 1.8
#      uses: actions/setup-java@v2
#      with:
#        distribution: 'temurin'
#        java-version: 8
#    - name: Run tests
#      run: mvn clean test -Daquality.buildName="${{github.event.inputs.build_name}}" -DdriverSettings.${{github.event.inputs.platform_name}}.deviceKey=${{github.event.inputs.device_name_and_version}} -Daquality.token=${{secrets.TRACKING_API_TOKEN}} -Daquality.suiteName="${{github.event.inputs.platform_name}} - ${{github.event.inputs.test_tag}}" -Daquality.environment="${{github.event.inputs.platform_name}}" -Dcredentials.LYRASISReads."ios".${{secrets.BookCardLyrasis3}}=${{secrets.BookPinLyrasis3}} -Dcredentials.LYRASISReads."ios".${{secrets.BookCardLyrasis4}}=${{secrets.BookPinLyrasis4}} -Dcredentials.LYRASISReads."android".${{secrets.BookCardLyrasis3}}=${{secrets.BookPinLyrasis3}} -Dcredentials.LYRASISReads."android".${{secrets.BookCardLyrasis4}}=${{secrets.BookPinLyrasis4}} -Dcredentials.A1QATestLibrary."ios".${{secrets.BookCardLyrasis3}}=${{secrets.BookPinLyrasis3}} -Dcredentials.A1QATestLibrary."ios".${{secrets.BookCardLyrasis4}}=${{secrets.BookPinLyrasis4}} -Dcredentials.A1QATestLibrary."android".${{secrets.BookCardLyrasis3}}=${{secrets.BookPinLyrasis3}} -Dcredentials.A1QATestLibrary."android".${{secrets.BookCardLyrasis4}}=${{secrets.BookPinLyrasis4}} -DremoteConnectionUrl=${{secrets.remoteConnectionUrl}} -DdriverSettings.${{github.event.inputs.platform_name}}.capabilities."browserstack.user"=${{secrets.BROWSERSTACK_USER}} -DdriverSettings.${{github.event.inputs.platform_name}}.capabilities."browserstack.key"=${{secrets.BROWSERSTACK_KEY}} -DplatformName=${{github.event.inputs.platform_name}} -DdriverSettings.${{github.event.inputs.platform_name}}.capabilities.app=${{github.event.inputs.bs_app_link}} -Dcucumber.options="--tags '(${{github.event.inputs.test_tag}} and not @ignore) and not @exclude_${{github.event.inputs.platform_name}} and not @tier1'"
#    - name: Generate Allure Report
#      uses: AEkaterina/action-allure-report@v0.1.1
#      if: success() || failure()
#    - name: Upload report
#      uses: actions/upload-artifact@v3
#      with:
#        name: allure-report-2
#        path: allure-report/
#      if: success() || failure()
